-- 间隔X分钟统计
-- 时间区间内，完成作业单数，完成订单行数，完成拣货件数

SET @begin_time = '2021-04-18 13:00:00' ; -- 设置具体时间
SET @interval_time :=60 ; -- 间隔时间 单位：分钟

SELECT
tt.rn as '时间段', -- 目前只体现6小时

CASE WHEN tt.rn=1 THEN tmp3.time_1
WHEN tt.rn=2 then tmp3.time_2
WHEN tt.rn=3 then tmp3.time_3
WHEN tt.rn=4 then tmp3.time_4
WHEN tt.rn=5 then tmp3.time_5
WHEN tt.rn=6 then tmp3.time_6
end as '具体时间',

CASE WHEN tt.rn=1 then tmp.order_1
WHEN tt.rn=2 then tmp.order_2
WHEN tt.rn=3 then tmp.order_3
WHEN tt.rn=4 then tmp.order_4
WHEN tt.rn=5 then tmp.order_5
WHEN tt.rn=6 then tmp.order_6
end as '完成作业单数',

CASE WHEN tt.rn=1 then tmp2.detail_1
WHEN tt.rn=2 then tmp2.detail_2
WHEN tt.rn=3 then tmp2.detail_3
WHEN tt.rn=4 then tmp2.detail_4
WHEN tt.rn=5 then tmp2.detail_5
WHEN tt.rn=6 then tmp2.detail_6
end as '完成订单行数',

CASE WHEN tt.rn=1 then tmp2.qty_1
WHEN tt.rn=2 then tmp2.qty_2
WHEN tt.rn=3 then tmp2.qty_3
WHEN tt.rn=4 then tmp2.qty_4
WHEN tt.rn=5 then tmp2.qty_5
WHEN tt.rn=6 then tmp2.qty_6
end as '完成拣货件数'

FROM (
SELECT
SUM(CASE WHEN t.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time MINUTE) THEN 1 ELSE 0 END) as 'order_1',
SUM(CASE WHEN t.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time MINUTE) AND t.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*2 MINUTE) THEN 1 ELSE 0 END) as 'order_2',
SUM(CASE WHEN t.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*2 MINUTE) AND t.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*3 MINUTE) THEN 1 ELSE 0 END) as 'order_3',
SUM(CASE WHEN t.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*3 MINUTE) AND t.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*4 MINUTE) THEN 1 ELSE 0 END) as 'order_4',
SUM(CASE WHEN t.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*4 MINUTE) AND t.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*5 MINUTE) THEN 1 ELSE 0 END) as 'order_5',
SUM(CASE WHEN t.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*5 MINUTE) AND t.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*6 MINUTE) THEN 1 ELSE 0 END) as 'order_6'
FROM evo_wcs_g2p.picking_work t
 WHERE t.state = 'DONE' AND t.updated_date > @begin_time AND t.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*6 MINUTE)
) 
tmp,

(
SELECT
-- 时间区间内，完成订单行数
SUM(CASE WHEN t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time MINUTE) THEN 1 ELSE 0 END) as 'detail_1',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*2 MINUTE) THEN 1 ELSE 0 END) as 'detail_2',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*2 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*3 MINUTE) THEN 1 ELSE 0 END) as 'detail_3',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*3 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*4 MINUTE) THEN 1 ELSE 0 END) as 'detail_4',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*4 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*5 MINUTE) THEN 1 ELSE 0 END) as 'detail_5',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*5 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*6 MINUTE) THEN 1 ELSE 0 END) as 'detail_6',
-- 时间区间内，完成货品件数
SUM(CASE WHEN t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time MINUTE) THEN t1.actual_quantity ELSE 0 END) as 'qty_1',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*2 MINUTE) THEN t1.actual_quantity ELSE 0 END) as 'qty_2',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*2 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*3 MINUTE) THEN t1.actual_quantity ELSE 0 END) as 'qty_3',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*3 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*4 MINUTE) THEN t1.actual_quantity ELSE 0 END) as 'qty_4',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*4 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*5 MINUTE) THEN t1.actual_quantity ELSE 0 END) as 'qty_5',
SUM(CASE WHEN t1.updated_date > DATE_ADD(@begin_time,INTERVAL @interval_time*5 MINUTE) AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*6 MINUTE) THEN t1.actual_quantity ELSE 0 END) as 'qty_6'
 FROM evo_wcs_g2p.picking_job t1 WHERE t1.state = 'DONE' AND t1.updated_date > @begin_time AND t1.updated_date <= DATE_ADD(@begin_time,INTERVAL @interval_time*6 MINUTE)
) tmp2,

(
SELECT
-- 时间区间内，具体时间段
DATE_ADD(MIN(@begin_time),INTERVAL 60 MINUTE) as 'time_1',
DATE_ADD(MIN(@begin_time),INTERVAL 60*2 MINUTE) as 'time_2',
DATE_ADD(MIN(@begin_time),INTERVAL 60*3 MINUTE) as 'time_3',
DATE_ADD(MIN(@begin_time),INTERVAL 60*4 MINUTE) as 'time_4',
DATE_ADD(MIN(@begin_time),INTERVAL 60*5 MINUTE) as 'time_5',
DATE_ADD(MIN(@begin_time),INTERVAL 60*6 MINUTE) as 'time_6'
)tmp3,

(
SELECT 1 rn
UNION ALL 
SELECT 2 rn
UNION ALL 
SELECT 3 rn
UNION ALL 
SELECT 4 rn
UNION ALL 
SELECT 5 rn
UNION ALL 
SELECT 6 rn
)tt
GROUP BY tt.rn;